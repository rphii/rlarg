arg.c NEW
    verify if allow_rest is not set, but we get more! what the hell!
    argx_pos! positional on sub-group?
    implement option=value
    argx_explicit/optional ... the above is required to set an optional value!
    if 'option <value>' do not ignore 'option -flag' input! (flag)
    index/guide -> yellow vs blue vs cyan

arg.c
    print min/max with --help
    don't print current/default value with --help if type is none...
    custom type... (allowing e.g. vectors)
    option for n times the same arg
    option to set - or ~ or . etc (spacing thing)
    option to set max width manually, enable/disable auto width
    check for spaces in long options
    auto-generate autocompletion for bash
    if desc/etc prints a \n, reset also internally.
    cannot set short arg to prefix
    enable pushing to rest via argx_ to individually control whether or not additional arguments are allowed. also allows for nice help printing
    check for correctness of general structure in setref. .... e.g. argx_flag -> argx_flag_set ! and also arg_opt -> arg_opt_enum ... stuff like that
    option to not show env variable's default value. or not at all, not even with --help ENV
    pipe

    crash if: (uncomment 4th line to not crash)

      x=argx_init(arg_opt(arg), 'c', str("categories"), str("search: categories"));
        g=argx_flag(x);
          x=argx_init(g, 0, str("general"), str(""));
            //argx_flag_set(x, &cli.api.print_url, 0);


    DESTRUCTIVE or ADDITIVE vectors!!!
    (if user has something in a vector supplied by a config,
     either add or delete template values..)

str.c
    str_as_color: rgb() rgba() rgb( ) ...

